/* Delete database, if it exist to avoid error */
DROP DATABASE IF EXISTS tournament;

/* CREATE DATABASE tournament manually in the psgl console */
CREATE DATABASE tournament;

/* Connect to database */
\c tournament;

/*
Create the player table that contains their unique id and names.
The player id will be generated by the data base.

 id |       name
----+------------------
  1 | Twilight Sparkle
  2 | Fluttershy
  3 | Applejack
  4 | Pinkie Pie
 */

CREATE TABLE players (
    id      SERIAL PRIMARY KEY,
    name    varchar(90) NOT NULL
);


/*
Create the matches table that displays the winner and loser of
tournament.

 match_id | winner | loser
----------+--------+-------
       1  |    1   |   2
       2  |    3   |   4
 */
CREATE TABLE matches (
    match_id SERIAL PRIMARY KEY,
    winner  integer REFERENCES players (id),
    loser   integer REFERENCES players (id)
);


/*
Creating the winner View to show players that won.

 id  |       name       | won
-----+------------------+-----
 1   | Twilight Sparkle |   1
 3   | Applejack        |   1
 2   | Fluttershy       |   0
 4   | Pinkie Pie       |   0

  */
CREATE VIEW winners AS
SELECT players.id, players.name, count(matches.winner) AS won
       FROM players LEFT JOIN matches
       ON players.id = matches.winner
       GROUP BY players.id
       ORDER BY won DESC;

/*
Creating the loser View to show players that lost.

 id  |       name       | lost
-----+------------------+------
 2   | Fluttershy       |    1
 4   | Pinkie Pie       |    1
 1   | Twilight Sparkle |    0
 3   | Applejack        |    0
 */
CREATE VIEW losers AS
SELECT players.id, players.name, count(matches.loser) AS lost
       FROM players LEFT JOIN  matches
       ON  players.id = matches.loser
       GROUP BY players.id
       ORDER BY lost DESC;


/*
Creating the player standings View to show total winners and losers,
as well as the number of matches played. order by the win id.

 id  |       name       | won | played
-----+------------------+-----+--------
 1   | Twilight Sparkle |   1 |      1
 3   | Applejack        |   1 |      1
 2   | Fluttershy       |   0 |      1
 4   | Pinkie Pie       |   0 |      1

 */

CREATE VIEW standings AS
SELECT winners.id, winners.name, winners.won, winners.won + losers.lost as played
	     FROM winners, losers
	     WHERE winners.id = losers.id
	     ORDER BY won DESC;

/*
Create row (odd, even) numbered views for pairings.
After one match, players with one win are paired
for the next round of a match.

 id  |    name    | id2 |      name2
-----+------------+-----+------------------
 570 | Pinkie Pie | 568 | Fluttershy
 569 | Applejack  | 567 | Twilight Sparkle

 */

CREATE VIEW odd AS
SELECT row_number() OVER (ORDER BY won) as num, id, name
	     FROM standings;

CREATE VIEW even AS
SELECT 1+row_number() OVER (ORDER BY won) as num, id, name
	     FROM standings;

CREATE VIEW pairings AS
SELECT odd.id, odd.name, even.id AS id2, even.name AS name2
	     FROM odd, even
	     WHERE odd.num = even.num AND odd.num%2 = 0;


